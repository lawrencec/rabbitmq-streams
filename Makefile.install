# This is a makefile that builds Streams into a directory structure
# that makes installation and packaging easier.

PACKAGE_FILE=rabbitmq-streams-0.1.tar.gz
TARGET_DIR=rabbitmq-streams-0.1
TMP_DIR=tmp
LIB_TARGET_DIR=${TMP_DIR}/lib
SBIN_TARGET_DIR=${TMP_DIR}/sbin
INSTALL_CONFIG_DIR=${TMP_DIR}/config
PLUGIN_TARGET_DIR=${TMP_DIR}/plugins
INSTALL_INC_DIR=${TMP_DIR}/include

all: build

prepare:
	mkdir -p ${TARGET_DIR}

clean:
	rm -rf ${TARGET_DIR}
	rm -rf ${TMP_DIR}
	rm -rf ${PACKAGE_FILE}

build: build_libs build_plugins build_config build_sbin build_doc build_examples

build_libs: prepare_libs \
	build_orchestrator \
	build_rfc4627 \
	build_ibrowse \
	build_couch \
	build_amqp \
	build_rabbit
	cp -rf harness/python/lib/* ${TARGET_DIR}/lib/python

prepare_libs: prepare
	mkdir -p ${TARGET_DIR}/lib/erlang
	mkdir -p ${TARGET_DIR}/lib/java
	mkdir -p ${TARGET_DIR}/lib/python
	mkdir -p ${TARGET_DIR}/examples


### Build erlang libraries ###

build_orchestrator: prepare_orchestrator
	$(MAKE) -C orchestrator EBIN_DIR=${CURDIR}/${TARGET_DIR}/lib/erlang/orchestrator/ebin all
	cp orchestrator/include/* ${TARGET_DIR}/lib/erlang/orchestrator/include
	cp orchestrator/streamsctl ${TARGET_DIR}/lib/erlang/orchestrator

prepare_orchestrator:
	mkdir -p ${TARGET_DIR}/lib/erlang/orchestrator/ebin
	mkdir -p ${TARGET_DIR}/lib/erlang/orchestrator/include

build_rfc4627: prepare_rfc4627
	$(MAKE) -C build/src/erlang-rfc4627 EBIN_DIR=${CURDIR}/${TARGET_DIR}/lib/erlang/rfc4627/ebin all

prepare_rfc4627:
	mkdir -p ${TARGET_DIR}/lib/erlang/rfc4627

build_ibrowse: prepare_ibrowse
	$(MAKE) -C build/src/jungerl/lib/ibrowse/src
	cp -r build/src/jungerl/lib/ibrowse/ebin ${CURDIR}/${TARGET_DIR}/lib/erlang/ibrowse

prepare_ibrowse:
	mkdir -p ${TARGET_DIR}/lib/erlang/ibrowse/ebin

build_couch: prepare_couch
	cp -r build/opt/couchdb-0.9.0/lib/couchdb/erlang/lib/couch-0.9.0/ebin/* ${TARGET_DIR}/lib/erlang/couch/ebin

prepare_couch:
	mkdir -p ${TARGET_DIR}/lib/erlang/couch/ebin

build_amqp: prepare_amqp

prepare_amqp:
	mkdir -p ${TARGET_DIR}/lib/erlang/amqp/ebin

build_rabbit: prepare_rabbit
	cp -r build/opt/rabbitmq/ebin/* ${TARGET_DIR}/lib/erlang/rabbit/ebin
	cp -r build/opt/rabbitmq/include/* ${TARGET_DIR}/lib/erlang/rabbit/include

prepare_rabbit:
	mkdir -p ${TARGET_DIR}/lib/erlang/rabbit/ebin
	mkdir -p ${TARGET_DIR}/lib/erlang/rabbit/include

#### Package everything else ####
JAVA_PLUGINS := regexp_split socket_source relay xslt socket_destination logger
PYTHON_PLUGINS := regexp_replace webfeed rsspoll

build_plugins: prepare_plugins
	for j in $(JAVA_PLUGINS); \
		do mkdir -p ${TARGET_DIR}/plugins/$$j; cp plugins/$$j/plugin.js ${TARGET_DIR}/plugins/$$j; cp -rf plugins/$$j/lib ${TARGET_DIR}/plugins/$$j; \
	done
	for p in $(PYTHON_PLUGINS); \
		do mkdir -p ${TARGET_DIR}/plugins/$$p; cp -rf plugins/$$p ${TARGET_DIR}/plugins; \
	done

prepare_plugins: prepare
	mkdir -p ${TARGET_DIR}/plugins

build_config: prepare_config

prepare_config: prepare
	mkdir -p ${TARGET_DIR}/config

build_sbin: prepare_sbin

prepare_sbin: prepare
	mkdir -p ${TARGET_DIR}/sbin
	cp sbin/* ${TARGET_DIR}/sbin

build_examples: prepare_examples
	cp -rf examples/* ${TARGET_DIR}/examples

prepare_examples:
	mkdir -p ${TARGET_DIR}/examples

build_doc: prepare_doc

prepare_doc:
	mkdir -p ${TARGET_DIR}/doc

install: build prepare_install
	cp -rf ${TARGET_DIR}/lib/* ${LIB_TARGET_DIR}
	cp -rf ${TARGET_DIR}/plugins/* ${PLUGIN_TARGET_DIR}
	cp -rf ${TARGET_DIR}/sbin/* ${SBIN_TARGET_DIR}

prepare_install:
	mkdir -p ${LIB_TARGET_DIR}
	mkdir -p ${SBIN_TARGET_DIR}
	mkdir -p ${INSTALL_CONFIG_DIR}
	mkdir -p ${PLUGIN_TARGET_DIR}

CURRENT_BRANCH=$(shell hg branch)
package: 
	rm -f ${PACKAGE_FILE}
	mkdir -p tmp
	hg clone -r $(CURRENT_BRANCH) . tmp/rabbitmq-streams-0.1
	$(MAKE) -C tmp/rabbitmq-streams-0.1 create-var-dirs build/src/couchdb-0.9.0 build/src/erlang-rfc4627 build/src/jungerl build/src/rabbitmq-codegen build/src/rabbitmq-server build/src/rabbitmq-erlang-client
	cd tmp; tar zcvf ../${PACKAGE_FILE} --exclude=*.tar.gz --exclude=.hg --exclude=.hgignore  --exclude=.svn rabbitmq-streams-0.1
	rm -rf tmp
